USE DBSALESPP
GO




if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_BASE_SELECTION]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_BASE_SELECTION]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_CALENDAR]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_CALENDAR]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_CROSSJOIN]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_CROSSJOIN]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_DELDISTR]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_DELDISTR]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_DELIVER]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_DELIVER]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_DELIVER_DISTINCT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_DELIVER_DISTINCT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_DELIVER_POS]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_DELIVER_POS]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_DPM]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_DPM]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_LCOMSEL]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_LCOMSEL]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSA]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSA]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSADATETYPE]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSADATETYPE]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSA_ATTRIBUTES_HIERARCHY]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSA_ATTRIBUTES_HIERARCHY]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSA_ATTRIBUTES_MSACRIT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSA_ATTRIBUTES_MSACRIT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSA_ATTRIBUTES_MSASTAT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSA_ATTRIBUTES_MSASTAT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSA_ATTRIBUTES_MSEALWTYPE]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSA_ATTRIBUTES_MSEALWTYPE]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSA_ATTRIBUTES_MSETYPE]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSA_ATTRIBUTES_MSETYPE]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_MSA_DISTRIBUTED]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_MSA_DISTRIBUTED]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDDATETYPE]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDDATETYPE]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDDISTR]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDDISTR]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDER]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDER]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDER_ATTRIBUTES_HIERARCHY]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDER_ATTRIBUTES_HIERARCHY]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDER_ATTRIBUTES_ORDDIRDEL]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDER_ATTRIBUTES_ORDDIRDEL]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDER_ATTRIBUTES_ORDPRESAL]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDER_ATTRIBUTES_ORDPRESAL]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDER_ATTRIBUTES_ORDSENT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDER_ATTRIBUTES_ORDSENT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_ORDER_ATTRIBUTES_ORDSTAT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_ORDER_ATTRIBUTES_ORDSTAT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_PLANOGRAM]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_PLANOGRAM]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_PRICELIST_DIM]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_PRICELIST_DIM]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_PRICELIST_FACT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_PRICELIST_FACT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_PRICELIST_SELRANGE]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_PRICELIST_SELRANGE]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_PRODEXPAND]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_PRODEXPAND]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_PRODUCT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_PRODUCT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT1]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT1]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT2]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT2]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT4]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT4]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_HIERARCHY]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_HIERARCHY]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT1]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT1]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT10]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT10]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT2]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT2]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT3]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT3]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT4]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT4]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT5]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT5]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT6]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT6]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT7]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT7]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCTYPE]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALCTYPE]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALNOTCALL]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALNOTCALL]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALUNCALL]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_ATTRIBUTES_SALUNCALL]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_FACT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_FACT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_SALUNCALL]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_SALUNCALL]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALESCALL_SUM_FACT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALESCALL_SUM_FACT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SALMCAL]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SALMCAL]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SELECTION]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SELECTION]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_STORE_FACT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_STORE_FACT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_STORE_SALESFORCE]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_STORE_SALESFORCE]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_STORE_SALESFORCE_HIERARCHY]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_STORE_SALESFORCE_HIERARCHY]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SURVEY_DIM]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SURVEY_DIM]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_SURVEY_FACT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_SURVEY_FACT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_TARGET_DIM]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_TARGET_DIM]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_TTARENTR_PRODGRP]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_TTARENTR_PRODGRP]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[V_OLAP_TTARENTR_PRODUCT]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[V_OLAP_TTARENTR_PRODUCT]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[v_select_product_groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[v_select_product_groups]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[spp].[v_select_store_groups]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view [spp].[v_select_store_groups]
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_CALENDAR
AS
select distinct spp.tcalndar.salmsern AS SALMSERN , salmname , caldate  AS CALDATE , 'Undefined' as CCHNAME  from spp.tcalndar inner join spp.tsalman on spp.tcalndar.salmsern=spp.tsalman.salmsern where calstatus1=2

GO

setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE  VIEW spp.V_OLAP_BASE_SELECTION
AS
SELECT 
OLAP_BASE_SELECTION.COMSERNO , 
OLAP_BASE_SELECTION.PRODSERN , 
OLAP_BASE_SELECTION.SELDATE , 
OLAP_BASE_SELECTION.INSEL ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=OLAP_BASE_SELECTION.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_BASE_SELECTION.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM spp.OLAP_BASE_SELECTION OLAP_BASE_SELECTION








GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE VIEW spp.V_OLAP_CROSSJOIN
AS
SELECT COMSERNO , PRODSERN , 

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=OLAP_STORE.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_PRODUCT.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM 
spp.OLAP_STORE OLAP_STORE
CROSS JOIN
spp.OLAP_PRODUCT OLAP_PRODUCT







GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE VIEW spp.V_OLAP_DELDISTR
AS

SELECT 
COMSERNO , 
PRODSERN ,
DELDATE ,
INDISTR_CUM AS INDISTR ,
INSELDISTR_CUM AS INSELDISTR ,
INBSELDISTR_CUM AS INBSELDISTR ,
PRODEXPAND ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=TBL.COMSERNO AND OLAP_LPROPGR.PRODSERN=TBL.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM spp.OLAP_DELDISTR_NOTEXP TBL
WHERE PRODEXPAND IN (0,1)

UNION ALL

SELECT 
COMSERNO , 
PRODSERN ,
DELDATE ,
INDISTR_CUM AS INDISTR ,
INSELDISTR_CUM AS INSELDISTR ,
INBSELDISTR_CUM AS INBSELDISTR ,
2 AS PRODEXPAND ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=TBL.COMSERNO AND OLAP_LPROPGR.PRODSERN=TBL.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM spp.OLAP_DELDISTR_EXP TBL








GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO









CREATE VIEW spp.V_OLAP_DELIVER
AS
SELECT  
spp.OLAP_STORE.COMSERNO, 
spp.OLAP_STORE.NR, 
ISNULL(spp.TDELIVER.COMSERNCCH , '') AS COMSERNCCH, 
ISNULL(spp.TDELIVER.COMSERNCHN , '') AS COMSERNCHN, 
ISNULL(spp.TDELIVER.COMSERNWHS , '') AS COMSERNWHS, 
OLAP_LPROPROD.PRODSERN, 
OLAP_LPROPROD.PRODEXPAND ,
ISNULL(spp.TDELENTR.SALMSERN,'') AS SALMSERN ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=spp.OLAP_STORE.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_LPROPROD.PRODSERN
),'0')
 AS STORE_SALMSERN ,


spp.TDELIVER.DELDATE,

	CASE DELEVOLFLG
		WHEN '1' THEN (CASE DELEPRFLAG
					WHEN '1'   THEN  1 								-- VOL IN CASES, PRICE IN CASES
					WHEN '2'   THEN (1/OLAP_LPROPROD.PRODPALLET)			-- VOL IN CASES , PRICE IN PALLETS
					ELSE 	(OLAP_LPROPROD.PRODSIZE) 					-- VOL IN CASES, PRICE IN CONS PKGS
					END)*spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT* spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT
		ELSE (CASE DELEPRFLAG
				WHEN '1'   THEN (1/OLAP_LPROPROD.PRODSIZE) 							-- VOL IN CONS PKG, PRICE IN CASES
				WHEN '2'   THEN 1/(OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODPALLET)		-- VOL IN CONS PKG , PRICE IN PALLETS
				ELSE 	 1												-- VOL IN CONS PKG, PRICE IN CONS PKGS
				END)*spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT
	END AS DELEMONETARY , 

	CASE DELEVOLFLG
		WHEN '1' THEN OLAP_LPROPROD.PRODPRICE * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT*(OLAP_LPROPROD.PRODMONEY_MULT) 			-- VOL IN CASES, PRICE IN CASES
		ELSE (OLAP_LPROPROD.PRODPRICE/OLAP_LPROPROD.PRODSIZE) * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT*(OLAP_LPROPROD.PRODMONEY_MULT)	-- VOL IN CONS PKG, PRICE IN CASES
	END AS DELEMONETARY_PRODPRICE , 


	ISNULL((SELECT TOP 1 SELE_PURCH_PRICE_NET FROM spp.OLAP_TSELENTR t1 WHERE t1.PRODSERN=spp.TDELENTR.PRODSERN and  t1.SELESTART<=spp.TDELIVER.DELDATE and  t1.SELEEND>=spp.TDELIVER.DELDATE and EXISTS(SELECT TOP 1 1 FROM spp.OLAP_LCOMSEL t2 WHERE t1.SELSERN=t2.SELSERN AND t2.COMSERNO=spp.TDELIVER.COMSERNO) ),0)*
		(CASE DELEVOLFLG
		WHEN '1' THEN  OLAP_LPROPROD.PRODSIZE * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT 	-- VOL IN CASES, PRICE IN CONS PKGS
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT							-- VOL IN CONS PKG, PRICE IN CONS PKGS
		END)*OLAP_LPROPROD.PRODMONEY_MULT
	AS DELEMONETARY_PRICELIST , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL* OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCASE_MULT
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT
	END AS DELEACTVOL , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCPS*OLAP_LPROPROD.PRODCASE_MULT
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPS*OLAP_LPROPROD.PRODCPG_MULT
	END AS DELEACTUNITS , 


	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCPWNET*OLAP_LPROPROD.PRODCASE_MULT/1000 --kilograms
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPWNET*OLAP_LPROPROD.PRODCPG_MULT/1000 --kilograms
	END AS DELENETWT , 


	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCPWGR*OLAP_LPROPROD.PRODCASE_MULT/1000 --kilograms
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPWGR*OLAP_LPROPROD.PRODCPG_MULT/1000 --kilograms
	END AS DELECPWGR , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASEWGR*OLAP_LPROPROD.PRODCASE_MULT/1000 --kilograms
		ELSE (spp.TDELENTR.DELEACTVOL/OLAP_LPROPROD.PRODSIZE)*OLAP_LPROPROD.PRODCASEWGR*OLAP_LPROPROD.PRODCPG_MULT/1000 --kilograms
	END AS DELECASEWGR , 
	
	
	-- cases are calculated from child product sum cases
	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT*OLAP_LPROPROD.CHILDCASE_MULT
		ELSE (spp.TDELENTR.DELEACTVOL/OLAP_LPROPROD.PRODSIZE)*OLAP_LPROPROD.PRODCPG_MULT*OLAP_LPROPROD.CHILDCASE_MULT
	END AS DELEACTCASEVOL , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT/OLAP_LPROPROD.PRODPALLET
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT/(OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODPALLET)
	END AS DELEACTPALLETVOL ,

	CASE DELEPRFLAG
		WHEN '1'   THEN (spp.TDELENTR.DELEPRICE/ OLAP_LPROPROD.PRODSIZE)*OLAP_LPROPROD.PRODMONEY_MULT		-- PRICE IN CASES
		WHEN '2'   THEN (spp.TDELENTR.DELEPRICE /(OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODPALLET))*OLAP_LPROPROD.PRODMONEY_MULT		-- PRICE IN PALLETS
		ELSE 	spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT												-- PRICE IN CONS PKGS
	END AS DELEPRICE_NET,

	CASE DELEPRFLAG
		WHEN '1'   THEN spp.TDELENTR.DELEPRICE / OLAP_LPROPROD.PRODSIZE * ( 1 + OLAP_LPROPROD.PRODTAX/100)*OLAP_LPROPROD.PRODMONEY_MULT		-- PRICE IN CASES
		WHEN '2'   THEN spp.TDELENTR.DELEPRICE / (OLAP_LPROPROD.PRODSIZE * OLAP_LPROPROD.PRODPALLET )* ( 1 +OLAP_LPROPROD.PRODTAX/100)*OLAP_LPROPROD.PRODMONEY_MULT			-- PRICE IN PALLETS
		ELSE 	spp.TDELENTR.DELEPRICE* ( 1 + OLAP_LPROPROD.PRODTAX/100)*OLAP_LPROPROD.PRODMONEY_MULT			-- PRICE IN CONS PKGS
	END AS DELEPRICE_GROSS

FROM  spp.TDELIVER INNER JOIN
               spp.TDELENTR ON spp.TDELIVER.DELSERN = spp.TDELENTR.DELSERN
INNER JOIN spp.OLAP_STORE ON ISNULL(spp.TDELIVER.COMSERNO,'0')=spp.OLAP_STORE.COMSERNO
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON ISNULL(spp.TDELENTR.PRODSERN,'0')=OLAP_LPROPROD.PARENT_PRODSERN
WHERE spp.TDELIVER.COMSERNWHS='0' OR LEN(LTRIM(spp.TDELIVER.COMSERNWHS))=15  -- IN POS = 0
































GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO








CREATE VIEW spp.V_OLAP_DELIVER_DISTINCT
AS
SELECT  
spp.OLAP_STORE.COMSERNO, 
spp.OLAP_STORE.NR, 
ISNULL(spp.TDELIVER.COMSERNCCH , '') AS COMSERNCCH, 
ISNULL(spp.TDELIVER.COMSERNCHN , '') AS COMSERNCHN, 
ISNULL(spp.TDELIVER.COMSERNWHS , '') AS COMSERNWHS, 
OLAP_LPROPROD.PRODSERN, 

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=spp.OLAP_STORE.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_LPROPROD.PRODSERN
),'0')
 AS STORE_SALMSERN ,

4 AS PRODEXPAND ,
ISNULL(spp.TDELENTR.SALMSERN,'') AS SALMSERN,
spp.TDELIVER.DELDATE
FROM  spp.TDELIVER INNER JOIN
               spp.TDELENTR ON spp.TDELIVER.DELSERN = spp.TDELENTR.DELSERN
INNER JOIN spp.OLAP_STORE ON ISNULL(spp.TDELIVER.COMSERNO,'0')=spp.OLAP_STORE.COMSERNO
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON ISNULL(spp.TDELENTR.PRODSERN,'0')=OLAP_LPROPROD.PARENT_PRODSERN
WHERE spp.TDELIVER.COMSERNWHS='0' OR LEN(LTRIM(spp.TDELIVER.COMSERNWHS))=15  -- IN POS = 0
AND OLAP_LPROPROD.PRODEXPAND IN ('0' , '1')

UNION ALL

SELECT  
spp.OLAP_STORE.COMSERNO, 
spp.OLAP_STORE.NR, 
ISNULL(spp.TDELIVER.COMSERNCCH , '') AS COMSERNCCH, 
ISNULL(spp.TDELIVER.COMSERNCHN , '') AS COMSERNCHN, 
ISNULL(spp.TDELIVER.COMSERNWHS , '') AS COMSERNWHS, 
OLAP_LPROPROD.PRODSERN, 

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=spp.OLAP_STORE.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_LPROPROD.PRODSERN
),'0')
 AS STORE_SALMSERN ,

3 AS PRODEXPAND ,
ISNULL(spp.TDELENTR.SALMSERN,'') AS SALMSERN,
spp.TDELIVER.DELDATE
FROM  spp.TDELIVER INNER JOIN
               spp.TDELENTR ON spp.TDELIVER.DELSERN = spp.TDELENTR.DELSERN
INNER JOIN spp.OLAP_STORE ON ISNULL(spp.TDELIVER.COMSERNO,'0')=spp.OLAP_STORE.COMSERNO
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON ISNULL(spp.TDELENTR.PRODSERN,'0')=OLAP_LPROPROD.PARENT_PRODSERN
WHERE spp.TDELIVER.COMSERNWHS='0' OR LEN(LTRIM(spp.TDELIVER.COMSERNWHS))=15  -- IN POS = 0
AND OLAP_LPROPROD.PRODEXPAND IN ('0' , '2')









GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO






CREATE VIEW spp.V_OLAP_DELIVER_POS
AS

SELECT  
spp.OLAP_STORE.COMSERNO,
ISNULL(spp.TDELIVER.COMSERNCCH , '') AS COMSERNCCH, 
ISNULL(spp.TDELIVER.COMSERNCHN , '') AS COMSERNCHN, 
ISNULL(spp.TDELIVER.COMSERNWHS , '') AS COMSERNWHS, 
OLAP_LPROPROD.PRODSERN, 

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=spp.OLAP_STORE.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_LPROPROD.PRODSERN
),'0')
 AS STORE_SALMSERN ,

OLAP_LPROPROD.PRODEXPAND ,
ISNULL(spp.TDELENTR.SALMSERN , '') AS SALMSERN , 
spp.TDELIVER.DELDATE,

	CASE DELEVOLFLG
		WHEN '1' THEN (CASE DELEPRFLAG
					WHEN '1'   THEN  1 								-- VOL IN CASES, PRICE IN CASES
					WHEN '2'   THEN (1/OLAP_LPROPROD.PRODPALLET)			-- VOL IN CASES , PRICE IN PALLETS
					ELSE 	(OLAP_LPROPROD.PRODSIZE) 					-- VOL IN CASES, PRICE IN CONS PKGS
					END)*spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT* spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT
		ELSE (CASE DELEPRFLAG
				WHEN '1'   THEN (1/OLAP_LPROPROD.PRODSIZE) 							-- VOL IN CONS PKG, PRICE IN CASES
				WHEN '2'   THEN 1/(OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODPALLET)		-- VOL IN CONS PKG , PRICE IN PALLETS
				ELSE 	 1												-- VOL IN CONS PKG, PRICE IN CONS PKGS
				END)*spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT
	END AS DELEMONETARY_NET , 

	CASE DELEVOLFLG
		WHEN '1' THEN (CASE DELEPRFLAG
					WHEN '1'   THEN  1 								-- VOL IN CASES, PRICE IN CASES
					WHEN '2'   THEN (1/OLAP_LPROPROD.PRODPALLET)			-- VOL IN CASES , PRICE IN PALLETS
					ELSE 	(OLAP_LPROPROD.PRODSIZE) 					-- VOL IN CASES, PRICE IN CONS PKGS
					END)*spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT* spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT*( 1 + OLAP_LPROPROD.PRODTAX/100)
		ELSE (CASE DELEPRFLAG
				WHEN '1'   THEN (1/OLAP_LPROPROD.PRODSIZE) 							-- VOL IN CONS PKG, PRICE IN CASES
				WHEN '2'   THEN 1/(OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODPALLET)		-- VOL IN CONS PKG , PRICE IN PALLETS
				ELSE 	 1												-- VOL IN CONS PKG, PRICE IN CONS PKGS
				END)*spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT*( 1 + OLAP_LPROPROD.PRODTAX/100)
	END AS DELEMONETARY_GROSS , 


	CASE DELEVOLFLG
		WHEN '1' THEN OLAP_LPROPROD.PRODPRICE * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT*(OLAP_LPROPROD.PRODMONEY_MULT) 			-- VOL IN CASES, PRICE IN CASES
		ELSE (OLAP_LPROPROD.PRODPRICE/OLAP_LPROPROD.PRODSIZE) * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT*(OLAP_LPROPROD.PRODMONEY_MULT)	-- VOL IN CONS PKG, PRICE IN CASES
	END AS DELEMONETARY_PRODPRICE , 


	ISNULL((SELECT TOP 1 SELE_PURCH_PRICE_NET FROM spp.OLAP_TSELENTR t1 WHERE t1.PRODSERN=spp.TDELENTR.PRODSERN and  t1.SELESTART<=spp.TDELIVER.DELDATE and  t1.SELEEND>=spp.TDELIVER.DELDATE and EXISTS(SELECT TOP 1 1 FROM spp.OLAP_LCOMSEL t2 WHERE t1.SELSERN=t2.SELSERN AND t2.COMSERNO=spp.TDELIVER.COMSERNO) ),0)*
		(CASE DELEVOLFLG
		WHEN '1' THEN  OLAP_LPROPROD.PRODSIZE * spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT 	-- VOL IN CASES, PRICE IN CONS PKGS
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT							-- VOL IN CONS PKG, PRICE IN CONS PKGS
		END)*OLAP_LPROPROD.PRODMONEY_MULT
	AS DELEMONETARY_PRICELIST , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL* OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCASE_MULT
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT
	END AS DELEACTVOL , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCPS*OLAP_LPROPROD.PRODCASE_MULT
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPS*OLAP_LPROPROD.PRODCPG_MULT
	END AS DELEACTUNITS , 
	
	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCPWNET*OLAP_LPROPROD.PRODCASE_MULT/1000 --kilograms
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPWNET*OLAP_LPROPROD.PRODCPG_MULT/1000 --kilograms
	END AS DELENETWT , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCPWGR*OLAP_LPROPROD.PRODCASE_MULT/1000 --kilograms
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPWGR*OLAP_LPROPROD.PRODCPG_MULT/1000 --kilograms
	END AS DELECPWGR , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASEWGR*OLAP_LPROPROD.PRODCASE_MULT/1000 --kilograms
		ELSE (spp.TDELENTR.DELEACTVOL/OLAP_LPROPROD.PRODSIZE)*OLAP_LPROPROD.PRODCASEWGR*OLAP_LPROPROD.PRODCPG_MULT/1000 --kilograms
	END AS DELECASEWGR , 

	-- cases are calculated from child product sum cases
	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT*OLAP_LPROPROD.CHILDCASE_MULT
		ELSE (spp.TDELENTR.DELEACTVOL/OLAP_LPROPROD.PRODSIZE)*OLAP_LPROPROD.PRODCPG_MULT*OLAP_LPROPROD.CHILDCASE_MULT
	END AS DELEACTCASEVOL , 

	CASE DELEVOLFLG
		WHEN '1'  THEN  spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCASE_MULT/OLAP_LPROPROD.PRODPALLET
		ELSE spp.TDELENTR.DELEACTVOL*OLAP_LPROPROD.PRODCPG_MULT/(OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODPALLET)
	END AS DELEACTPALLETVOL ,

	CASE DELEPRFLAG
		WHEN '1'   THEN (spp.TDELENTR.DELEPRICE/ OLAP_LPROPROD.PRODSIZE)*OLAP_LPROPROD.PRODMONEY_MULT		-- PRICE IN CASES
		WHEN '2'   THEN (spp.TDELENTR.DELEPRICE /(OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODPALLET))*OLAP_LPROPROD.PRODMONEY_MULT		-- PRICE IN PALLETS
		ELSE 	spp.TDELENTR.DELEPRICE*OLAP_LPROPROD.PRODMONEY_MULT												-- PRICE IN CONS PKGS
	END AS DELEPRICE_NET,

	CASE DELEPRFLAG
		WHEN '1'   THEN spp.TDELENTR.DELEPRICE / OLAP_LPROPROD.PRODSIZE * ( 1 + OLAP_LPROPROD.PRODTAX/100)*OLAP_LPROPROD.PRODMONEY_MULT		-- PRICE IN CASES
		WHEN '2'   THEN spp.TDELENTR.DELEPRICE / (OLAP_LPROPROD.PRODSIZE * OLAP_LPROPROD.PRODPALLET )* ( 1 +OLAP_LPROPROD.PRODTAX/100)*OLAP_LPROPROD.PRODMONEY_MULT			-- PRICE IN PALLETS
		ELSE 	spp.TDELENTR.DELEPRICE* ( 1 + OLAP_LPROPROD.PRODTAX/100)*OLAP_LPROPROD.PRODMONEY_MULT			-- PRICE IN CONS PKGS
	END AS DELEPRICE_GROSS

FROM  spp.TDELIVER INNER JOIN
               spp.TDELENTR ON spp.TDELIVER.DELSERN = spp.TDELENTR.DELSERN
INNER JOIN spp.OLAP_STORE ON  ISNULL(spp.TDELIVER.COMSERNO,'0')=spp.OLAP_STORE.COMSERNO
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON ISNULL(spp.TDELENTR.PRODSERN,'0')=OLAP_LPROPROD.PARENT_PRODSERN
WHERE LEN(LTRIM(ISNULL(spp.TDELIVER.COMSERNWHS,'')))=0








GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO




CREATE   VIEW spp.V_OLAP_DPM
AS
SELECT 
DPMHDATE , 
OLAP_DPM.PRODSERN ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=OLAP_DPM.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_DPM.PRODSERN
),'0')
 AS STORE_SALMSERN ,

'0' AS SALMSERN , 
COMSERNO,
DPMEFACING_CUM,
DPMECHAN_CUM,
DPMECOVER_CUM,
DPMESELCOVER_CUM,
DPMEBSELCOVER_CUM,
DPMESALESP_CUM,
DPMEAVESTP_CUM,
DPMEPRICE_NET,
DPMEPRICE_GROSS,
DPMMEASURED_CUM AS DPMMEASURED,
DPMBSELMEASURED_CUM AS DPMBSELMEASURED,
PRODEXPAND ,
DPMCOUNT
FROM
spp.OLAP_DPM_NOTEXP OLAP_DPM
WHERE OLAP_DPM.PRODEXPAND IN (0,1)


UNION ALL


SELECT 
DPMHDATE , 
OLAP_DPM.PRODSERN ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=OLAP_DPM.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_DPM.PRODSERN
),'0')
 AS STORE_SALMSERN ,


'0' AS SALMSERN , 
COMSERNO,
DPMEFACING_CUM,
DPMECHAN_CUM,
DPMECOVER_CUM,
DPMESELCOVER_CUM,
DPMEBSELCOVER_CUM,
DPMESALESP_CUM,
DPMEAVESTP_CUM,
DPMEPRICE_NET,
DPMEPRICE_GROSS,
DPMMEASURED_CUM AS DPMMEASURED,
DPMBSELMEASURED_CUM AS DPMBSELMEASURED,
2 AS PRODEXPAND ,
DPMCOUNT
FROM
spp.OLAP_DPM_EXP OLAP_DPM

















GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_LCOMSEL
AS
SELECT 
SALMSERN,
COMSERNO,
SELSERN
FROM spp.LCOMSEL LCOMSEL
WHERE 
LCSTYPE='0'  
AND ( LCSDEFAULT='1' OR 
NOT EXISTS(SELECT  * FROM spp.LCOMSEL lcomsel2 WHERE LCOMSEL.SELSERN!=lcomsel2.SELSERN AND  LCOMSEL.COMSERNO=lcomsel2.COMSERNO AND (  LCOMSEL.SALMSERN=lcomsel2.SALMSERN OR LEN(RTRIM(lcomsel2.SALMSERN))=0 ) AND lcomsel2.LCSDEFAULT='1'   AND lcomsel2.LCSTYPE='0' )
)

















GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO








CREATE VIEW spp.V_OLAP_MSA
AS

SELECT
COMSERNO , 
ISNULL(COMSERNCCH , '') AS COMSERNCCH ,
ISNULL(COMSERNCHN , '') AS COMSERNCHN ,
ISNULL(COMSERNWHS , '') AS COMSERNWHS ,
ISNULL(SALMSERN,'') AS SALMSERN , 

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=TBL.COMSERNO AND OLAP_LPROPGR.PRODSERN=TBL.PRODSERN
),'0')
 AS STORE_SALMSERN ,

PRODSERN , 
MSEPKGS  AS MSEPKGS ,
MSEMONEY AS MSEMONEY_GROSS ,
(MSEMONEY/(1+MSETAX/100)) AS MSEMONEY_NET ,
MSEMONEY-(MSEMONEY/(1+MSETAX/100)) AS MSETAX ,
MSA_DATE ,
MSADATE_KEY,

ISNULL(MSACRIT,'')  AS MSACRIT,
ISNULL(MSASTAT,'')  AS MSASTAT,
ISNULL(MSETYPE,'')  AS MSETYPE,
ISNULL(MSEALWTYPE,'')  AS MSEALWTYPE,

PRODEXPAND
FROM 
(

SELECT
COMSERNO,
COMSERNCCH,
COMSERNCHN,
COMSERNWHS,
SALMSERN,

MSACRIT,
MSASTAT,
TMSAENTR.MSETYPE,
MSEALWTYPE,

CASE 
	WHEN  ISDATE(MSAPAID)=1 THEN MSAPAID
	WHEN  ISDATE(MSAPAY)=1 THEN MSAPAY
	ELSE MSASTART
END AS MSA_DATE ,
 'P' AS MSADATE_KEY,
TMSAENTR.MSEMONEY*OLAP_LPROPROD.PRODMONEY_MULT AS MSEMONEY ,  TMSAENTR.MSETAX*OLAP_LPROPROD.PRODMONEY_MULT  AS MSETAX ,  OLAP_LPROPROD.PRODSERN   ,  TMSAENTR.MSEPKGS*OLAP_LPROPROD.PRODCPG_MULT  AS MSEPKGS  ,  OLAP_LPROPROD.PRODEXPAND  FROM spp.TMSASLIP  TMSASLIP
INNER JOIN spp.TMSAENTR TMSAENTR ON TMSASLIP.MSASERN=TMSAENTR.MSASERN
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON (CASE LEN(RTRIM(TMSAENTR.PRODSERN)) WHEN 15 THEN TMSAENTR.PRODSERN ELSE '0' END)  =OLAP_LPROPROD.PARENT_PRODSERN
WHERE 
ISDATE(MSASTART)=1 AND ISDATE(MSAEND)=1 AND MSASTART<=MSAEND   AND
ISDATE(MSADATE)=1


UNION ALL


SELECT
COMSERNO,
COMSERNCCH,
COMSERNCHN,
COMSERNWHS,
SALMSERN,

MSACRIT,
MSASTAT,
TMSAENTR.MSETYPE,
MSEALWTYPE,
MSADATE AS MSA_DATE ,  
'C' AS MSADATE_KEY,
TMSAENTR.MSEMONEY*OLAP_LPROPROD.PRODMONEY_MULT AS MSEMONEY ,  TMSAENTR.MSETAX*OLAP_LPROPROD.PRODMONEY_MULT  AS MSETAX ,  OLAP_LPROPROD.PRODSERN   ,  TMSAENTR.MSEPKGS*OLAP_LPROPROD.PRODCPG_MULT AS MSEPKGS  ,  OLAP_LPROPROD.PRODEXPAND  FROM spp.TMSASLIP  TMSASLIP
INNER JOIN spp.TMSAENTR TMSAENTR ON TMSASLIP.MSASERN=TMSAENTR.MSASERN
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON (CASE LEN(RTRIM(TMSAENTR.PRODSERN)) WHEN 15 THEN TMSAENTR.PRODSERN ELSE '0' END)  =OLAP_LPROPROD.PARENT_PRODSERN
WHERE 
ISDATE(MSASTART)=1 AND ISDATE(MSAEND)=1 AND MSASTART<=MSAEND   AND
ISDATE(MSADATE)=1


) TBL


































































GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_MSADATETYPE
AS
SELECT 'C' AS MSADATE_KEY , 'Creation Date' AS MSADATE_TYPE
UNION
SELECT 'P' AS MSADATE_KEY , 'Payment Date' AS MSADATE_TYPE
UNION
SELECT 'V' AS MSADATE_KEY , 'Validity Date' AS MSADATE_TYPE










GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO

CREATE VIEW spp.V_OLAP_MSA_ATTRIBUTES_HIERARCHY
AS

SELECT * , 
CASE 
	WHEN [KEY]='0' AND ATTR='MSASTAT' THEN 0 -- MAKE SURE IT SHULD BE ONLY ZERO
	ELSE 1
END AS DUMMY_LINK_HIERARCHY FROM
(
SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Status' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Proposal' 
		WHEN '1' THEN 'Agreed' 
		WHEN '2' THEN 'Alarm' 
		WHEN '3' THEN 'Confirmed By Salesman' 
		WHEN '4' THEN 'Rejected' 
		WHEN '5' THEN 'Confirmed For Payment' 
		WHEN '6' THEN 'Transported To Accounts Payable' 
		WHEN '7' THEN 'Sent To Bank/Post' 
		WHEN '8' THEN 'Money Received' 
		ELSE [KEY] + ' - Unknown'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '2' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '3' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '4' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '5' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '6' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '7' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT '8' AS [KEY], 'MSASTAT' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(MSASTAT, '') AS [KEY], 'MSASTAT' AS ATTR FROM spp.TMSASLIP
	) TBL


UNION ALL


SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Payment Criterium' AS ATTR_NAME,
	CASE [KEY]
		WHEN '1' THEN 'Order' 
		WHEN '2' THEN 'Delivery' 
		WHEN '3' THEN 'Scanner' 
		ELSE [KEY] + ' - Unknown'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '1' AS [KEY], 'MSACRIT' AS ATTR
		UNION
		SELECT '2' AS [KEY], 'MSACRIT' AS ATTR
		UNION
		SELECT '3' AS [KEY], 'MSACRIT' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(MSACRIT, '') AS [KEY], 'MSACRIT' AS ATTR FROM spp.TMSASLIP
	) TBL


UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Type' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Marketing Allowance' 
		WHEN '1' THEN 'Advertising Support' 
		WHEN '2' THEN 'Rotation' 
		WHEN '3' THEN 'Compensation Money' 
		WHEN '4' THEN 'Compensation Goods' 
		WHEN '5' THEN 'Campaign' 
		WHEN '6' THEN 'Contract' 
		ELSE [KEY] + ' - Unknown'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'MSETYPE' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'MSETYPE' AS ATTR
		UNION
		SELECT '2' AS [KEY], 'MSETYPE' AS ATTR
		UNION
		SELECT '3' AS [KEY], 'MSETYPE' AS ATTR
		UNION
		SELECT '4' AS [KEY], 'MSETYPE' AS ATTR
		UNION
		SELECT '5' AS [KEY], 'MSETYPE' AS ATTR
		UNION
		SELECT '6' AS [KEY], 'MSETYPE' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(MSETYPE, '') AS [KEY], 'MSETYPE' AS ATTR FROM spp.TMSAENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Marketing Allowance Type' AS ATTR_NAME,
	[KEY]  AS ATTR_VAL 
FROM 
	(
		SELECT DISTINCT ISNULL(MSEALWTYPE, '') AS [KEY], 'MSEALWTYPE' AS ATTR FROM spp.TMSAENTR 
	) TBL


) TBL



GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO

CREATE VIEW spp.V_OLAP_MSA_ATTRIBUTES_MSACRIT
AS
SELECT '1' AS [KEY]
UNION
SELECT '2' AS [KEY]
UNION
SELECT '3' AS [KEY]
UNION
SELECT DISTINCT ISNULL(MSACRIT, '') AS [KEY]  FROM spp.TMSASLIP



GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_MSA_ATTRIBUTES_MSASTAT
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT '2' AS [KEY]
UNION
SELECT '3' AS [KEY]
UNION
SELECT '4' AS [KEY]
UNION
SELECT '5' AS [KEY]
UNION
SELECT '6' AS [KEY]
UNION
SELECT '7' AS [KEY]
UNION
SELECT '8' AS [KEY]
UNION
SELECT DISTINCT ISNULL(MSASTAT, '') AS [KEY]  FROM spp.TMSASLIP


GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO

CREATE VIEW spp.V_OLAP_MSA_ATTRIBUTES_MSEALWTYPE
AS

SELECT DISTINCT ISNULL(MSEALWTYPE, '') AS [KEY]  FROM spp.TMSAENTR
UNION
SELECT '' AS [KEY] WHERE NOT EXISTS(SELECT TOP 1 1 FROM spp.TMSAENTR )





GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO

CREATE VIEW spp.V_OLAP_MSA_ATTRIBUTES_MSETYPE
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT '2' AS [KEY]
UNION
SELECT '3' AS [KEY]
UNION
SELECT '4' AS [KEY]
UNION
SELECT '5' AS [KEY]
UNION
SELECT '6' AS [KEY]
UNION
SELECT DISTINCT ISNULL(MSETYPE, '') AS [KEY]  FROM spp.TMSAENTR




GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO








CREATE VIEW spp.V_OLAP_MSA_DISTRIBUTED
AS

SELECT
COMSERNO , 
ISNULL(SALMSERN,'') AS SALMSERN , 

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  LEFT OUTER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=TMSASLIP.COMSERNO AND OLAP_LPROPGR.PRODSERN=TMSASLIP.PRODSERN
),'0')
 AS STORE_SALMSERN ,

ISNULL(COMSERNCCH , '') AS COMSERNCCH ,
ISNULL(COMSERNCHN , '') AS COMSERNCHN ,
ISNULL(COMSERNWHS , '') AS COMSERNWHS ,
PRODSERN , 
CAST(MSEPKGS/(MSA_WRKDAYS)as real) AS MSEPKGS ,
CAST(MSEMONEY/(MSA_WRKDAYS)as real) AS MSEMONEY_GROSS ,
CAST((MSEMONEY/(1+MSETAX/100))/(MSA_WRKDAYS)as real) AS MSEMONEY_NET ,
CAST((MSEMONEY-(MSEMONEY/(1+MSETAX/100)))/(MSA_WRKDAYS)as real) AS MSETAX ,
OLAP_DATE.DATE MSAVDATE,
MSADATE_KEY,

ISNULL(MSACRIT,'')  AS MSACRIT,
ISNULL(MSASTAT,'')  AS MSASTAT,
ISNULL(MSETYPE,'')  AS MSETYPE,
ISNULL(MSEALWTYPE,'')  AS MSEALWTYPE,

PRODEXPAND
FROM 
( 
SELECT 
COMSERNO,
COMSERNCCH,
COMSERNCHN,
COMSERNWHS,
SALMSERN,

MSASTART,
MSAEND,

MSACRIT,
MSASTAT,
TMSAENTR.MSETYPE,
MSEALWTYPE,

'MSACRIT_' + ISNULL(MSACRIT,'NULL') AS MSA_STATUS_KEY,  
'V' AS MSADATE_KEY  , 
(SELECT SUM(MSA_WRKDAY) FROM spp.OLAP_DATE WHERE DATE>=MSASTART AND DATE<=MSAEND) AS MSA_WRKDAYS ,  
TMSAENTR.MSEMONEY*OLAP_LPROPROD.PRODMONEY_MULT AS MSEMONEY ,  TMSAENTR.MSETAX*OLAP_LPROPROD.PRODMONEY_MULT  AS MSETAX ,  
OLAP_LPROPROD.PRODSERN   ,  TMSAENTR.MSEPKGS*OLAP_LPROPROD.PRODCPG_MULT AS MSEPKGS  ,  OLAP_LPROPROD.PRODEXPAND   
FROM spp.TMSASLIP   
TMSASLIP
INNER JOIN spp.TMSAENTR TMSAENTR ON TMSASLIP.MSASERN=TMSAENTR.MSASERN
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON (CASE LEN(RTRIM(TMSAENTR.PRODSERN)) WHEN 15 THEN TMSAENTR.PRODSERN ELSE '0' END)  =OLAP_LPROPROD.PARENT_PRODSERN
WHERE  ISDATE(MSASTART)=1 AND ISDATE(MSAEND)=1 AND MSASTART<=MSAEND  
AND ISDATE(MSADATE)=1
)
TMSASLIP
INNER JOIN spp.OLAP_DATE OLAP_DATE ON (MSASTART<=OLAP_DATE.DATE AND MSAEND>=OLAP_DATE.DATE AND MSA_WRKDAY=1) 











































GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_ORDDATETYPE
AS
SELECT 'C' AS ORDDATE_KEY , 'Creation Date' AS ORDDATE_TYPE
UNION
SELECT 'O' AS ORDDATE_KEY , 'Order Date' AS ORDDATE_TYPE
UNION
SELECT 'D' AS ORDDATE_KEY , 'Delivery Date' AS ORDDATE_TYPE







GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE VIEW spp.V_OLAP_ORDDISTR
AS

SELECT 
COMSERNO , 
PRODSERN ,
ORDDDATE ,
INDISTR_CUM AS INDISTR ,
INSELDISTR_CUM AS INSELDISTR ,
INBSELDISTR_CUM AS INBSELDISTR ,
PRODEXPAND ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=TBL.COMSERNO AND OLAP_LPROPGR.PRODSERN=TBL.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM spp.OLAP_ORDDISTR_NOTEXP TBL
WHERE PRODEXPAND IN (0,1)

UNION ALL

SELECT 
COMSERNO , 
PRODSERN ,
ORDDDATE ,
INDISTR_CUM AS INDISTR ,
INSELDISTR_CUM AS INSELDISTR ,
INBSELDISTR_CUM AS INBSELDISTR ,
2 AS PRODEXPAND ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=TBL.COMSERNO AND OLAP_LPROPGR.PRODSERN=TBL.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM spp.OLAP_ORDDISTR_EXP TBL







GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_ORDER
AS
SELECT 
TORDER.COMSERNO, 
ISNULL(TORDER.SALMSERN,'') AS SALMSERN ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=TORDER.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_LPROPROD.PRODSERN
),'0')
 AS STORE_SALMSERN ,

ISNULL(TORDER.COMSERNCCH , '') AS COMSERNCCH, 
ISNULL(TORDER.COMSERNCHN , '') AS COMSERNCHN, 
ISNULL(TORDER.COMSERNWHS , '') AS COMSERNWHS, 
TORDER.ORDDATE, 
--'ORDDIRDEL_0' AS DUMMY_LINK_HIERARCHY,

ISNULL(ORDDIRDEL,'')  AS ORDDIRDEL,
ISNULL(ORDPRESAL,'')  AS ORDPRESAL,
ISNULL(ORDSENT,'')  AS ORDSENT,
ISNULL(ORDSTAT,'')  AS ORDSTAT,

OLAP_LPROPROD.PRODSERN, 
OLAP_LPROPROD.PRODEXPAND ,
/*
spp.TORDENTR.ORDEVOL ,
spp.TORDENTR.ORDEPRFLAG ,
spp.TORDENTR.ORDEPRICE ,
OLAP_LPROPROD.PRODSIZE ,
*/
spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODCASE_MULT AS ORDEVOL_CASE, 
spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCASE_MULT AS ORDEVOL_CONSPKG, 
CASE ORDEPRFLAG
	WHEN '1' THEN spp.TORDENTR.ORDEPRICE*spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODCASE_MULT*OLAP_LPROPROD.PRODMONEY_MULT				/*price per case*/
	ELSE spp.TORDENTR.ORDEPRICE*spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODCASE_MULT*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODMONEY_MULT  	/*price per cons pkg*/
END AS MONETARY_WITHOUT_TAX ,
CASE ORDEPRFLAG
	WHEN '1' THEN spp.TORDENTR.ORDEACTPRG*spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODCASE_MULT*OLAP_LPROPROD.PRODMONEY_MULT	/*price per case*/
	ELSE spp.TORDENTR.ORDEACTPRG*spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODCASE_MULT*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODMONEY_MULT	/*price per cons pkg*/
END AS MONETARY_WITH_TAX ,
spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODCASE_MULT*OLAP_LPROPROD.PRODSIZE*OLAP_LPROPROD.PRODCPS  AS ORDEVOL_UNIT  ,
spp.TORDENTR.ORDEVOL*OLAP_LPROPROD.PRODCASE_MULT / OLAP_LPROPROD.PRODPALLET  AS ORDEVOL_PALLET ,
ORDDATETYPE
FROM  spp.TORDENTR INNER JOIN
(

SELECT ORDCDATE AS ORDDATE, 'C' AS ORDDATETYPE , *  FROM spp.TORDER

UNION ALL

SELECT ORDODATE AS ORDDATE, 'O' AS ORDDATETYPE , *  FROM spp.TORDER

UNION ALL

SELECT ORDDDATE AS ORDDATE, 'D' AS ORDDATETYPE , *  FROM spp.TORDER

)
TORDER
ON spp.TORDENTR.ORDSERN = TORDER.ORDSERN 
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON ISNULL(spp.TORDENTR.PRODSERN,'0')=OLAP_LPROPROD.PARENT_PRODSERN



























GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_ORDER_ATTRIBUTES_HIERARCHY
AS

SELECT * , 
CASE 
	WHEN [KEY]='0' AND ATTR='ORDDIRDEL' THEN 0 -- MAKE SURE IT SHULD BE ONLY ZERO
	ELSE 1
END AS DUMMY_LINK_HIERARCHY FROM
(
SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Direct Delivery' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Not Direct Delivery' 
		WHEN '1' THEN 'Direct Delivery' 
		ELSE [KEY] + ' - Unknown'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'ORDDIRDEL' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'ORDDIRDEL' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(ORDDIRDEL, '') AS [KEY], 'ORDDIRDEL' AS ATTR FROM spp.TORDER
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Pre-Sales' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Not Pre-Sales' 
		WHEN '1' THEN 'Pre-Sales' 
		ELSE [KEY] + ' - Unknown'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'ORDPRESAL' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'ORDPRESAL' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(ORDPRESAL, '') AS [KEY], 'ORDPRESAL' AS ATTR FROM spp.TORDER
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Sent' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Not Sent' 
		WHEN '1' THEN 'Sent' 
		ELSE [KEY] + ' - Unknown'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'ORDSENT' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'ORDSENT' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(ORDSENT, '') AS [KEY], 'ORDSENT' AS ATTR FROM spp.TORDER
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Status' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Proposal' 
		WHEN '1' THEN 'Pending' 
		WHEN '2' THEN 'Closed By Retailer' 
		WHEN '3' THEN 'Closed By Salesman' 
		WHEN '4' THEN 'Cancelled' 
		ELSE [KEY] + ' - Unknown'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'ORDSTAT' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'ORDSTAT' AS ATTR
		UNION
		SELECT '2' AS [KEY], 'ORDSTAT' AS ATTR
		UNION
		SELECT '3' AS [KEY], 'ORDSTAT' AS ATTR
		UNION
		SELECT '4' AS [KEY], 'ORDSTAT' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(ORDSTAT, '') AS [KEY], 'ORDSTAT' AS ATTR FROM spp.TORDER
	) TBL

) TBL






























GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_ORDER_ATTRIBUTES_ORDDIRDEL
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(ORDDIRDEL, '') AS [KEY]  FROM spp.TORDER




GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_ORDER_ATTRIBUTES_ORDPRESAL
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(ORDPRESAL, '') AS [KEY] FROM spp.TORDER




GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_ORDER_ATTRIBUTES_ORDSENT
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(ORDSENT, '') AS [KEY] FROM spp.TORDER





GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_ORDER_ATTRIBUTES_ORDSTAT
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT '2' AS [KEY]
UNION
SELECT '3' AS [KEY]
UNION
SELECT '4' AS [KEY]
UNION
SELECT DISTINCT ISNULL(ORDSTAT, '') AS [KEY]  FROM spp.TORDER





GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE view spp.V_OLAP_PLANOGRAM
AS
select tdpmhdr.COMSERNO ,  
tdpmhdr.SALMSERN , 
OLAP_LPROPROD.PRODSERN , 
OLAP_LPROPROD.PRODEXPAND ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=tdpmhdr.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_LPROPROD.PRODSERN
),'0')
 AS STORE_SALMSERN ,

TFIXTURE.FXTRSERN ,
tplnentr.PLNECPSUM  AS PLNECPSUM , 
tplnentr.PLNEFCSUM*OLAP_LPROPROD.PRODMONEY_MULT AS  PLNEFCSUM ,
tplnentr.PLNEFCSUM*tplnentr.PLNEPERF*OLAP_LPROPROD.PRODMONEY_MULT AS PLNECHANSUM  
from 
spp.tdpmhdr tdpmhdr inner join spp.tplnhdr tplnhdr on tdpmhdr.dpmhdsern=tplnhdr.dpmhdsern 
inner join spp.tplnentr tplnentr on tplnhdr.plnsern=tplnentr.plnsern
inner join spp.TFIXTURE TFIXTURE on tplnentr.FXTRSERN=TFIXTURE.FXTRSERN
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON tplnentr.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN
where dpmlast=1
















GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_PRICELIST_DIM
AS
SELECT SELSERN , SELNAME FROM spp.TSELECT WHERE SELSERN IN (SELECT SELSERN FROM spp.OLAP_TSELENTR)
UNION
SELECT '0'  AS SELSERN , 'No Data' AS SELNAME WHERE NOT EXISTS(SELECT * FROM spp.TSELECT WHERE SELSERN IN (SELECT SELSERN FROM spp.OLAP_TSELENTR) )







GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_PRICELIST_FACT
AS
SELECT
SELE_PURCH_PRICE_NET ,
SELE_PURCH_PRICE_GROSS ,
SELE_CONS_PRICE_NET ,
SELE_CONS_PRICE_GROSS ,
SELE_MARGIN ,
SELE_VALID_RANGE_SERN ,
OLAP_TSELENTR.SELSERN,
OLAP_TSELENTR.PRODSERN,
COMSERNO,
SALMSERN ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=OLAP_LCOMSEL.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_TSELENTR.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM
spp.OLAP_TSELENTR OLAP_TSELENTR
INNER JOIN spp.OLAP_LCOMSEL OLAP_LCOMSEL
ON OLAP_TSELENTR.SELSERN=OLAP_LCOMSEL.SELSERN




















GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE VIEW spp.V_OLAP_PRICELIST_SELRANGE
AS

select SELE_VALID_RANGE_SERN , DATE
FROM 
spp.OLAP_SELRANGE OLAP_SELRANGE, spp.OLAP_DATE OLAP_DATE
WHERE 
OLAP_SELRANGE.SELE_VALID_START<=OLAP_DATE.DATE
AND
OLAP_SELRANGE.SELE_VALID_END>=OLAP_DATE.DATE






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_PRODEXPAND
AS
SELECT 0 AS PRODEXPAND , '' AS PRODEXPNAME
UNION
SELECT 1 AS PRODEXPAND , '' AS PRODEXPNAME
UNION
SELECT 2 AS PRODEXPAND , '' AS PRODEXPNAME
UNION
SELECT 3 AS PRODEXPAND , 'Yes' AS PRODEXPNAME
UNION
SELECT 4 AS PRODEXPAND , 'No' AS PRODEXPNAME











GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE VIEW V_OLAP_PRODUCT
AS 
SELECT * FROM OLAP_PRODUCT





GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT1
AS

SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(CALESTAT1, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT2
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(CALESTAT2, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_CALESTAT4
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(CALESTAT4, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_HIERARCHY
AS

SELECT * , 
CASE 
	WHEN [KEY]='0' AND ATTR='CALESTAT1' THEN 0 -- MAKE SURE IT SHULD BE ONLY ZERO
	ELSE 1
END AS DUMMY_LINK_HIERARCHY FROM
(


SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Time Reserved' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Time Reserved - No' 
		WHEN '1' THEN 'Time Reserved - Yes' 
		ELSE 'Time Reserved - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'CALESTAT1' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'CALESTAT1' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(CALESTAT1, '') AS [KEY], 'CALESTAT1' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Status' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Status - OK' 
		WHEN '1' THEN 'Status - Cancelled' 
		WHEN '2' THEN 'Status - Moved' 
		ELSE 'Status - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'CALESTAT2' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'CALESTAT2' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(CALESTAT2, '') AS [KEY], 'CALESTAT2' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Phone Call' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Phone Call - No' 
		WHEN '1' THEN 'Phone Call - Yes' 
		ELSE 'Phone Call - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'CALESTAT4' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'CALESTAT4' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(CALESTAT4, '') AS [KEY], 'CALESTAT4' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'DPM Status' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'DPM Status - Not Done' 
		WHEN '1' THEN 'DPM Status - Done' 
		WHEN '2' THEN 'DPM Status - Sales Registered' 
		WHEN '3' THEN 'DPM Status - Shelf Reorg Proposed' 
		WHEN '4' THEN 'DPM Status - Shelf Reorg Done' 
		ELSE 'DPM Status - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT10' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT10' AS ATTR
		UNION
		SELECT '2' AS [KEY], 'SALCSTAT10' AS ATTR
		UNION
		SELECT '3' AS [KEY], 'SALCSTAT10' AS ATTR
		UNION
		SELECT '4' AS [KEY], 'SALCSTAT10' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT10, '') AS [KEY], 'SALCSTAT10' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Pending' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Pending - No' 
		WHEN '1' THEN 'Pending - Yes' 
		ELSE 'Pending - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT1' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT1' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT1, '') AS [KEY], 'SALCSTAT1' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Proposal Left' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Proposal Left - No' 
		WHEN '1' THEN 'Proposal Left - Yes' 
		ELSE 'Proposal Left - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT2' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT2' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT2, '') AS [KEY], 'SALCSTAT2' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Salesman Took The Order' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Salesman Took The Order - No' 
		WHEN '1' THEN 'Salesman Took The Order - Yes' 
		ELSE 'Salesman Took The Order - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT3' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT3' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT3, '') AS [KEY], 'SALCSTAT3' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Retailer Took The Order' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Retailer Took The Order - No' 
		WHEN '1' THEN 'Retailer Took The Order - Yes' 
		ELSE 'Retailer Took The Order - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT4' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT4' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT4, '') AS [KEY], 'SALCSTAT4' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Survey Done' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Survey Done - No' 
		WHEN '1' THEN 'Survey Done - Yes' 
		ELSE 'Survey Done - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT5' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT5' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT5, '') AS [KEY], 'SALCSTAT5' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Planning Done' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'Planning Done - No' 
		WHEN '1' THEN 'Planning Done - Yes' 
		ELSE 'Planning Done - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT6' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT6' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT6, '') AS [KEY], 'SALCSTAT6' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'MSA Done' AS ATTR_NAME,
	CASE [KEY]
		WHEN '0' THEN 'MSA Done - No' 
		WHEN '1' THEN 'MSA Done - Yes' 
		ELSE 'MSA Done - ' + [KEY]
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALCSTAT7' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALCSTAT7' AS ATTR
		UNION
		SELECT DISTINCT ISNULL(SALCSTAT7, '') AS [KEY], 'SALCSTAT7' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Sales Call Type' AS ATTR_NAME,
	'Sales Call Type - ' + [KEY] AS ATTR_VAL 
FROM 
	(
		SELECT DISTINCT ISNULL(SALCTYPE, '') AS [KEY], 'SALCTYPE' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

-- IN THIS CASE INVALID VALUES COUNT AS "NO" 
SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Is Call' AS ATTR_NAME,
	CASE [KEY]
		WHEN '1' THEN 'Is Call - Yes' 
		ELSE 'Is Call - No'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '1' AS [KEY], 'SALNOTCALL' AS ATTR
		UNION
		SELECT '0' AS [KEY], 'SALNOTCALL' AS ATTR
		--UNION
		--SELECT DISTINCT ISNULL(SALNOTCALL, '') AS [KEY], 'SALNOTCALL' AS ATTR FROM spp.TCALENTR
	) TBL

UNION ALL

-- IN THIS CASE INVALID VALUES COUNT AS "NO" 
SELECT 
	ATTR + '_' + [KEY] AS ATTR_KEY,
	ATTR,
	[KEY],
	'Unnecessary Call' AS ATTR_NAME,
	CASE [KEY]
		WHEN '1' THEN 'Unnecessary Call - Yes' 
		ELSE 'Unnecessary Call - No'
	END AS ATTR_VAL 
FROM 
	(
		SELECT '0' AS [KEY], 'SALUNCALL' AS ATTR
		UNION
		SELECT '1' AS [KEY], 'SALUNCALL' AS ATTR
		--UNION
		--SELECT DISTINCT ISNULL(SALUNCALL, '') AS [KEY], 'SALUNCALL' AS ATTR FROM spp.TCALENTR
	) TBL


) TBL



































GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT1
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT1, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT10
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT '2' AS [KEY]
UNION
SELECT '3' AS [KEY]
UNION
SELECT '4' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT10, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT2
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT2, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT3
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT3, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT4
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT4, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT5
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT5, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT6
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT6, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCSTAT7
AS
SELECT '0' AS [KEY]
UNION
SELECT '1' AS [KEY]
UNION
SELECT DISTINCT ISNULL(SALCSTAT7, '') AS [KEY]  FROM spp.TCALENTR






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALCTYPE
AS

SELECT DISTINCT ISNULL(SALCTYPE, '') AS [KEY]  FROM spp.TCALENTR
UNION
SELECT '' AS [KEY] WHERE NOT EXISTS(SELECT TOP 1 1 FROM spp.TCALENTR )





GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALNOTCALL
AS

--SELECT DISTINCT ISNULL(SALNOTCALL, '') AS [KEY]  FROM spp.TCALENTR
-- only 0 and 1 allowed
SELECT '0' AS [KEY] 
UNION
SELECT '1' AS [KEY]






GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO


CREATE VIEW spp.V_OLAP_SALESCALL_ATTRIBUTES_SALUNCALL
AS

--SELECT DISTINCT ISNULL(SALUNCALL, '') AS [KEY]  FROM spp.TCALENTR
-- only 0 and 1 allowed
SELECT '0' AS [KEY] 
UNION
SELECT '1' AS [KEY]





GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

setuser N'spp'
GO



CREATE VIEW spp.V_OLAP_SALESCALL_FACT
AS
SELECT 
SALMSERN , 
OLAP_STORE.COMSERNO , 
OLAP_STORE.NR , 
CALEDATE,
CASE CALESTART
	WHEN CALEEND THEN 1
	ELSE DATEDIFF(mi , CAST(LEFT(CALESTART,2)+':'+RIGHT(CALESTART,2) as datetime) , CAST(LEFT(CALEEND,2)+':'+RIGHT(CALEEND,2) as datetime)) 
END AS CALL_LENGTH ,

ISNULL(CALESTAT1,'') AS CALESTAT1 ,
ISNULL(CALESTAT2,'') AS CALESTAT2 ,
ISNULL(CALESTAT4,'') AS CALESTAT4 ,
ISNULL(SALCSTAT1,'') AS SALCSTAT1 ,
ISNULL(SALCSTAT2,'') AS SALCSTAT2 ,
ISNULL(SALCSTAT3,'') AS SALCSTAT3 ,
ISNULL(SALCSTAT4,'') AS SALCSTAT4 ,
ISNULL(SALCSTAT5,'') AS SALCSTAT5 ,
ISNULL(SALCSTAT6,'') AS SALCSTAT6 ,
ISNULL(SALCSTAT7,'') AS SALCSTAT7 ,
ISNULL(SALCSTAT10,'') AS SALCSTAT10 ,
ISNULL(SALCTYPE,'') AS SALCTYPE ,

-- only 0 and 1 allowed
CASE SALNOTCALL WHEN '1' THEN '1' ELSE '0' END AS SALNOTCALL ,
CASE  
	WHEN (  LTRIM(CALESTAT1) IN ('' , '0') AND LTRIM(CALESTAT2) IN ('' , '0') ) THEN '0' 
	ELSE '1'
END AS SALUNCALL 

FROM
(SELECT TOP 100 PERCENT * FROM spp.tcalentr WHERE ISDATE(ISNULL(LEFT(CALESTART,2)+':'+RIGHT(CALESTART,2),''))=1 AND ISDATE(ISNULL(LEFT(CALEEND,2)+':'+RIGHT(CALEEND,2),''))=1 ORDER BY CALESERN) --TOP 100 PERCENTwill force to execute this first
tcalentr
inner join spp.OLAP_STORE OLAP_STORE
on tcalentr.COMSERNO=OLAP_STORE.COMSERNO
WHERE 
DATEDIFF(mi , CAST(LEFT(CALESTART,2)+':'+RIGHT(CALESTART,2) as datetime) , CAST(LEFT(CALEEND,2)+':'+RIGHT(CALEEND,2) as datetime))>=0


GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

setuser N'spp'
GO



CREATE VIEW spp.V_OLAP_SALESCALL_SALUNCALL
AS
SELECT SALMSERN , COMSERNO , CALEDATE , 
CASE 
WHEN (  LTRIM(CALESTAT1) IN ('' , '0') AND LTRIM(CALESTAT2) IN ('' , '0') ) THEN 'SALUNCALL_0' 
ELSE 'SALUNCALL_1'
END AS SALESCALL_KEY  ,
CASE CALESTART
	WHEN CALEEND THEN 1
	ELSE DATEDIFF(mi , CAST(LEFT(CALESTART,2)+':'+RIGHT(CALESTART,2) as datetime) , CAST(LEFT(CALEEND,2)+':'+RIGHT(CALEEND,2) as datetime)) 
END AS CALL_LENGTH 
FROM spp.tcalentr
WHERE 
ISNUMERIC(CALESTART)=1 AND ISNUMERIC(CALEEND)=1 AND CALESTART IS NOT NULL AND CALEEND IS NOT NULL AND
DATEDIFF(mi , CAST(LEFT(CALESTART,2)+':'+RIGHT(CALESTART,2) as datetime) , CAST(LEFT(CALEEND,2)+':'+RIGHT(CALEEND,2) as datetime))>=0


GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_SALESCALL_SUM_FACT
AS
SELECT SALMSERN , CALEDATE ,
CASE MIN(CALESTART)
	WHEN MAX(CALEEND) THEN 1
	ELSE DATEDIFF(mi , CAST(LEFT(MIN(CALESTART),2)+':'+RIGHT(MIN(CALESTART),2) as datetime) , CAST(LEFT(MAX(CALEEND) ,2)+':'+RIGHT(MAX(CALEEND) ,2) as datetime)) 
END AS CALL_SUM
FROM
spp.TCALENTR TCALENTR
WHERE ISDATE(ISNULL(LEFT(CALESTART,2)+':'+RIGHT(CALESTART,2),''))=1 AND ISDATE(ISNULL(LEFT(CALEEND,2)+':'+RIGHT(CALEEND,2),''))=1 
AND LEN(CALESTART)=4 AND LEN(CALEEND)=4 AND ISNUMERIC(CALESTART)=1 AND ISNUMERIC(CALEEND)=1
AND CALESTART<=CALEEND
AND EXISTS(SELECT COMSERNO FROM spp.OLAP_STORE OLAP_STORE WHERE OLAP_STORE.COMSERNO=TCALENTR.COMSERNO )
AND EXISTS(SELECT SALMSERN  FROM spp.OLAP_SALESFORCE OLAP_SALESFORCE WHERE OLAP_SALESFORCE.SALMSERN=TCALENTR.SALMSERN )
GROUP BY SALMSERN , CALEDATE










GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_SALMCAL
AS
---------------------------- exceptions ----------------------------
SELECT SALMSERN , CALDATE  , -0.5 as  day_exception , 0.0 as field_day_exception from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE  (LTRIM(CALSTATUS1) IN ('','0' , '1') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('1')) 
	AND OLAP_DATE.WRKDAY_SUM=1.0
UNION ALL
SELECT SALMSERN , CALDATE  , 0.5 as  day_exception , 0.0 as field_day_exception from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE  (LTRIM(CALSTATUS1) IN ('','0' , '1') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('1')) 
	AND OLAP_DATE.WRKDAY_SUM=0.0
UNION ALL
SELECT SALMSERN , CALDATE  , -1.0 as  day_exception , 0.0 as field_day_exception from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE  NOT (LTRIM(CALSTATUS1) IN ('','0' , '1') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('','0' , '1')) 
	AND OLAP_DATE.WRKDAY_SUM=1.0
UNION ALL
SELECT SALMSERN , CALDATE  , 1.0 as  day_exception , 0.0 as field_day_exception  from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE  (LTRIM(CALSTATUS1) IN ('','0' , '1') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('','0')) 
	AND OLAP_DATE.WRKDAY_SUM=0.0

---------------------------- field days----------------------------
UNION ALL
SELECT SALMSERN , CALDATE  , 0.0 as  day_exception , -0.5 as field_day_exception  from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE  (LTRIM(CALSTATUS1) IN ('','0') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('1')) 
	AND OLAP_DATE.WRKDAY_SUM=1.0
UNION ALL
SELECT SALMSERN , CALDATE  , 0.0 as  day_exception , 0.5 as field_day_exception  from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE  (LTRIM(CALSTATUS1) IN ('','0') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('1')) 
	AND OLAP_DATE.WRKDAY_SUM=0.0
UNION ALL
SELECT SALMSERN , CALDATE  , 0.0 as  day_exception , -1.0 as field_day_exception  from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE NOT (LTRIM(CALSTATUS1) IN ('','0') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('','0' , '1')) 
	AND OLAP_DATE.WRKDAY_SUM=1.0
UNION ALL
SELECT SALMSERN , CALDATE  , 0.0 as  day_exception , 1.0 as field_day_exception  from spp.TCALNDAR  TCALNDAR
	INNER JOIN spp.OLAP_DATE OLAP_DATE ON TCALNDAR.CALDATE=OLAP_DATE.DATE
	WHERE (LTRIM(CALSTATUS1) IN ('','0') AND LTRIM(CALSTATUS2) IN ('','0') AND LTRIM(CALSTATUS3) IN ('','0') AND LTRIM(CALSTATUS4) IN ('','0')) 
	AND OLAP_DATE.WRKDAY_SUM=0.0



































GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO






CREATE  VIEW spp.V_OLAP_SELECTION
AS
SELECT 
OLAP_SELECTION.COMSERNO , OLAP_SELECTION.PRODSERN , OLAP_SELECTION.SELDATE  , OLAP_SELECTION.INSEL ,

ISNULL((SELECT 
CASE
	WHEN COUNT(*)>1 THEN '-1'
	ELSE MAX(SALMSERN)
END AS SALMSERN 
FROM spp.OLAP_LCOMPGR OLAP_LCOMPGR  INNER JOIN spp.OLAP_LPROPGR OLAP_LPROPGR ON OLAP_LCOMPGR.PGRSERN=OLAP_LPROPGR.PGRSERN 
WHERE OLAP_LCOMPGR.COMSERNO=OLAP_SELECTION.COMSERNO AND OLAP_LPROPGR.PRODSERN=OLAP_SELECTION.PRODSERN
),'0')
 AS STORE_SALMSERN 

FROM spp.OLAP_SELECTION OLAP_SELECTION








GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO








CREATE VIEW spp.V_OLAP_STORE_FACT
AS
select 
ISNULL(olap_lcompgr.SALMSERN , '0') AS SALMSERN , 
olap_store.COMSERNO , 
olap_store.NR ,
0 AS DUMMY_LINK_HIERARCHY ,
CASE
	WHEN ISNULL(store_distinct_count,1)=1 THEN ISNULL(COMTURNOVR,0.0) 
	ELSE 0.0
END AS STORE_TURNOVR,
 ISNULL(COMTURNOVR,0.0) AS SALESFORCE_TURNOVR
from 
spp.olap_store olap_store 
inner join spp.tcompany tcompany on olap_store.comserno=tcompany.comserno
left outer join 
(
select comserno , salmsern ,
case
	when exists(select * from  spp.olap_lcompgr t2 where t2.comserno=spp.olap_lcompgr.comserno and t2.salmsern<spp.olap_lcompgr.salmsern) then 0
	-- t2.salmsern<spp.olap_lcompgr.salmsern  -- this expression is correct because one of salesmen will have 1 as store_distinct_count
	else 1
end as store_distinct_count
from spp.olap_lcompgr
)olap_lcompgr on olap_store.comserno=olap_lcompgr.comserno










GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE VIEW spp.V_OLAP_STORE_SALESFORCE
AS
SELECT * FROM spp.OLAP_SALESFORCE
--:)   

















GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO





CREATE VIEW spp.V_OLAP_STORE_SALESFORCE_HIERARCHY
AS
SELECT * FROM spp.OLAP_STORE_SALESFORCE_HIERARCHY









GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_SURVEY_DIM
AS
SELECT 'NODATA' as QUESTION ,  'NODATA' as ANSWER , 0 as SURVEY_KEY WHERE NOT EXISTS(SELECT * FROM spp.OLAP_SURVEY)
UNION
SELECT QUESTION , ANSWER , SURVEY_KEY FROM spp.OLAP_SURVEY















GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_SURVEY_FACT
AS

SELECT
SURVEY_KEY ,
SALMSERN,
COMSERNO,
SAMCHDATE,
ANSWER_MEASURE AS ANSWER
FROM spp.OLAP_SURVEY

















GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_TARGET_DIM
AS
SELECT 'NO_DATA' AS TARGSERN , 'NO_DATA' AS TARGNAME , 'NO_DATA' AS TARGMEASURE , 'NO_DATA' AS DIM_KEY , 'NO_DATA' AS TARGCAP
	WHERE NOT EXISTS(SELECT * FROM spp.TTARGET)
UNION ALL
SELECT TARGSERN , TARGNAME  , 'TARGEVOLUM' AS TARGMEASURE , ISNULL(TARGSERN,'') + '1' AS DIM_KEY  , 'Target Volume' AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME , 'TARGEMONEY' AS TARGMEASURE ,  ISNULL(TARGSERN,'') + '2' AS DIM_KEY   , 'Target Money' AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,  'TARGENUM1' AS TARGMEASURE ,  ISNULL(TARGSERN,'') + '3' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP1,''))  AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,  'TARGENUM2' AS TARGMEASURE ,   ISNULL(TARGSERN,'') + '4' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP2,''))  AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,  'TARGENUM3' AS TARGMEASURE ,   ISNULL(TARGSERN,'') + '5' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP3,''))  AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,  'TARGENUM4' AS TARGMEASURE ,   ISNULL(TARGSERN,'') + '6' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP4,''))  AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,  'TARGMONEY1' AS TARGMEASURE ,   ISNULL(TARGSERN,'') + '7' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP5,''))  AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,  'TARGMONEY2' AS TARGMEASURE ,   ISNULL(TARGSERN,'') + '8' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP6,''))  AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,  'TARGMONEY3' AS TARGMEASURE ,   ISNULL(TARGSERN,'') + '9' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP7,''))  AS TARGCAP
FROM spp.TTARGET
UNION ALL
SELECT TARGSERN , TARGNAME ,   'TARGMONEY4' AS TARGMEASURE ,   ISNULL(TARGSERN,'') + '10' AS DIM_KEY ,
RTRIM(ISNULL(TARGCAP8,''))  AS TARGCAP
FROM spp.TTARGET












GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_TTARENTR_PRODGRP
AS
SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGEVOLUM' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGEMONEY' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM1' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM2' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM3' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM4' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGMONEY1' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGMONEY2' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
TARGMONEY3,
0 AS TARGMONEY4,
'TARGMONEY3' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP


UNION ALL


SELECT 
TARGSERN,
SALMSERN,
COMSERNO,
PRODSERN,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
TARGMONEY4,
'TARGMONEY4' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODGRP













GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE VIEW spp.V_OLAP_TTARENTR_PRODUCT
AS



SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
TARGEVOLUM AS TARGEVOLUM ,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGEVOLUM' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN

UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
TARGEMONEY*OLAP_LPROPROD.PRODMONEY_MULT AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGEMONEY' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN

UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
TARGENUM1  AS TARGENUM1 ,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM1' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN

UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
TARGENUM2  AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM2' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN

UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
TARGENUM3  AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM3' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN

UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
TARGENUM4  AS TARGENUM4 ,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGENUM4' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN

UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
TARGMONEY1*OLAP_LPROPROD.PRODMONEY_MULT AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGMONEY1' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN


UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
TARGMONEY2*OLAP_LPROPROD.PRODMONEY_MULT AS TARGMONEY2,
0 AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGMONEY2' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN

UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
TARGMONEY3*OLAP_LPROPROD.PRODMONEY_MULT AS TARGMONEY3,
0 AS TARGMONEY4,
'TARGMONEY3' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN


UNION ALL


SELECT 
TARGSERN,
ISNULL(SALMSERN,'') AS SALMSERN,
COMSERNO,
OLAP_LPROPROD.PRODSERN,
OLAP_LPROPROD.PRODEXPAND,
DATE,
0 AS TARGEVOLUM,
0 AS TARGEMONEY,
0 AS TARGENUM1,
0 AS TARGENUM2,
0 AS TARGENUM3,
0 AS TARGENUM4,
0 AS TARGMONEY1,
0 AS TARGMONEY2,
0 AS TARGMONEY3,
TARGMONEY4*OLAP_LPROPROD.PRODMONEY_MULT AS TARGMONEY4,
'TARGMONEY4' AS TARGMEASURE
FROM
spp.OLAP_TTARENTR_PRODUCT
INNER JOIN spp.OLAP_LPROPROD OLAP_LPROPROD ON spp.OLAP_TTARENTR_PRODUCT.PRODSERN=OLAP_LPROPROD.PARENT_PRODSERN



GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO







CREATE view spp.v_select_product_groups
AS
SELECT PRODUCT_GROUP_NAME FROM
--THIS SH*T TO PREVENT ERROR IN MSSQL7
(
SELECT 
CASE 
	WHEN LEN(COLUMN_NAME)>6 THEN SUBSTRING(COLUMN_NAME , 7 , LEN(COLUMN_NAME)-6) 
	ELSE NULL
END AS PRODUCT_GROUP_NAME 
from INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_CATALOG=(SELECT DB_NAME()) AND TABLE_SCHEMA='spp' AND TABLE_NAME='OLAP_PRODUCT'
AND LEFT(COLUMN_NAME ,6)='GRP@#@'
)
TEMP_TBL
WHERE PRODUCT_GROUP_NAME IS NOT  NULL








GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

setuser N'spp'
GO








CREATE view spp.v_select_store_groups
as
SELECT STORE_GROUP_NAME FROM
(
SELECT
--THIS SH*T TO PREVENT ERROR IN MSSQL7
CASE 
	WHEN LEN(COLUMN_NAME)>11 THEN SUBSTRING(COLUMN_NAME , 12 , LEN(COLUMN_NAME)-11) 
	ELSE NULL
END AS STORE_GROUP_NAME 
from INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_CATALOG=(SELECT DB_NAME()) AND TABLE_SCHEMA='spp' AND TABLE_NAME='OLAP_STORE'
AND LEFT(COLUMN_NAME ,11)='STOREGRP@#@'
) TEMP_TBL WHERE STORE_GROUP_NAME IS NOT NULL













GO
setuser
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


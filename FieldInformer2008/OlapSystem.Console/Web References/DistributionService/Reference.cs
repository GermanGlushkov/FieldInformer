//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4200.
// 
#pragma warning disable 1591

namespace OlapSystem.Console.DistributionService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DistributionServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DistributionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProcessBackgroundJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessDistributionJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQueuedDistributionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnqueueScheduledDistributionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnqueueScheduledDistributionsWDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DistributionService() {
            this.Url = "http://localhost/FieldInformer2008/UI.Web/WebServices/DistributionService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProcessBackgroundJobsCompletedEventHandler ProcessBackgroundJobsCompleted;
        
        /// <remarks/>
        public event ProcessDistributionJobsCompletedEventHandler ProcessDistributionJobsCompleted;
        
        /// <remarks/>
        public event SendQueuedDistributionsCompletedEventHandler SendQueuedDistributionsCompleted;
        
        /// <remarks/>
        public event EnqueueScheduledDistributionsCompletedEventHandler EnqueueScheduledDistributionsCompleted;
        
        /// <remarks/>
        public event EnqueueScheduledDistributionsWDateCompletedEventHandler EnqueueScheduledDistributionsWDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessBackgroundJobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessBackgroundJobs(string CompanyNameShort) {
            this.Invoke("ProcessBackgroundJobs", new object[] {
                        CompanyNameShort});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProcessBackgroundJobs(string CompanyNameShort, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProcessBackgroundJobs", new object[] {
                        CompanyNameShort}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndProcessBackgroundJobs(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ProcessBackgroundJobsAsync(string CompanyNameShort) {
            this.ProcessBackgroundJobsAsync(CompanyNameShort, null);
        }
        
        /// <remarks/>
        public void ProcessBackgroundJobsAsync(string CompanyNameShort, object userState) {
            if ((this.ProcessBackgroundJobsOperationCompleted == null)) {
                this.ProcessBackgroundJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessBackgroundJobsOperationCompleted);
            }
            this.InvokeAsync("ProcessBackgroundJobs", new object[] {
                        CompanyNameShort}, this.ProcessBackgroundJobsOperationCompleted, userState);
        }
        
        private void OnProcessBackgroundJobsOperationCompleted(object arg) {
            if ((this.ProcessBackgroundJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessBackgroundJobsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessDistributionJobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessDistributionJobs(string CompanyNameShort) {
            this.Invoke("ProcessDistributionJobs", new object[] {
                        CompanyNameShort});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProcessDistributionJobs(string CompanyNameShort, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProcessDistributionJobs", new object[] {
                        CompanyNameShort}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndProcessDistributionJobs(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ProcessDistributionJobsAsync(string CompanyNameShort) {
            this.ProcessDistributionJobsAsync(CompanyNameShort, null);
        }
        
        /// <remarks/>
        public void ProcessDistributionJobsAsync(string CompanyNameShort, object userState) {
            if ((this.ProcessDistributionJobsOperationCompleted == null)) {
                this.ProcessDistributionJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessDistributionJobsOperationCompleted);
            }
            this.InvokeAsync("ProcessDistributionJobs", new object[] {
                        CompanyNameShort}, this.ProcessDistributionJobsOperationCompleted, userState);
        }
        
        private void OnProcessDistributionJobsOperationCompleted(object arg) {
            if ((this.ProcessDistributionJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessDistributionJobsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendQueuedDistributions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendQueuedDistributions(string CompanyNameShort) {
            this.Invoke("SendQueuedDistributions", new object[] {
                        CompanyNameShort});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendQueuedDistributions(string CompanyNameShort, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendQueuedDistributions", new object[] {
                        CompanyNameShort}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendQueuedDistributions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SendQueuedDistributionsAsync(string CompanyNameShort) {
            this.SendQueuedDistributionsAsync(CompanyNameShort, null);
        }
        
        /// <remarks/>
        public void SendQueuedDistributionsAsync(string CompanyNameShort, object userState) {
            if ((this.SendQueuedDistributionsOperationCompleted == null)) {
                this.SendQueuedDistributionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQueuedDistributionsOperationCompleted);
            }
            this.InvokeAsync("SendQueuedDistributions", new object[] {
                        CompanyNameShort}, this.SendQueuedDistributionsOperationCompleted, userState);
        }
        
        private void OnSendQueuedDistributionsOperationCompleted(object arg) {
            if ((this.SendQueuedDistributionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQueuedDistributionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnqueueScheduledDistributions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnqueueScheduledDistributions(string CompanyNameShort) {
            this.Invoke("EnqueueScheduledDistributions", new object[] {
                        CompanyNameShort});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnqueueScheduledDistributions(string CompanyNameShort, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnqueueScheduledDistributions", new object[] {
                        CompanyNameShort}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnqueueScheduledDistributions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void EnqueueScheduledDistributionsAsync(string CompanyNameShort) {
            this.EnqueueScheduledDistributionsAsync(CompanyNameShort, null);
        }
        
        /// <remarks/>
        public void EnqueueScheduledDistributionsAsync(string CompanyNameShort, object userState) {
            if ((this.EnqueueScheduledDistributionsOperationCompleted == null)) {
                this.EnqueueScheduledDistributionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnqueueScheduledDistributionsOperationCompleted);
            }
            this.InvokeAsync("EnqueueScheduledDistributions", new object[] {
                        CompanyNameShort}, this.EnqueueScheduledDistributionsOperationCompleted, userState);
        }
        
        private void OnEnqueueScheduledDistributionsOperationCompleted(object arg) {
            if ((this.EnqueueScheduledDistributionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnqueueScheduledDistributionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnqueueScheduledDistributionsWDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnqueueScheduledDistributionsWDate(string CompanyNameShort, System.DateTime Date) {
            this.Invoke("EnqueueScheduledDistributionsWDate", new object[] {
                        CompanyNameShort,
                        Date});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnqueueScheduledDistributionsWDate(string CompanyNameShort, System.DateTime Date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnqueueScheduledDistributionsWDate", new object[] {
                        CompanyNameShort,
                        Date}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnqueueScheduledDistributionsWDate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void EnqueueScheduledDistributionsWDateAsync(string CompanyNameShort, System.DateTime Date) {
            this.EnqueueScheduledDistributionsWDateAsync(CompanyNameShort, Date, null);
        }
        
        /// <remarks/>
        public void EnqueueScheduledDistributionsWDateAsync(string CompanyNameShort, System.DateTime Date, object userState) {
            if ((this.EnqueueScheduledDistributionsWDateOperationCompleted == null)) {
                this.EnqueueScheduledDistributionsWDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnqueueScheduledDistributionsWDateOperationCompleted);
            }
            this.InvokeAsync("EnqueueScheduledDistributionsWDate", new object[] {
                        CompanyNameShort,
                        Date}, this.EnqueueScheduledDistributionsWDateOperationCompleted, userState);
        }
        
        private void OnEnqueueScheduledDistributionsWDateOperationCompleted(object arg) {
            if ((this.EnqueueScheduledDistributionsWDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnqueueScheduledDistributionsWDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void ProcessBackgroundJobsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void ProcessDistributionJobsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void SendQueuedDistributionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void EnqueueScheduledDistributionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void EnqueueScheduledDistributionsWDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591